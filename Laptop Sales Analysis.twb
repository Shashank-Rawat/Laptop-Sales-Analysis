<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
      </column>
    </datasource>
    <datasource caption='Laptops+' inline='true' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Laptops' name='textscan.0wczvw21gykglp1b2winb0y2xonc'>
            <connection class='textscan' directory='C:/Users/SHASHA~1/AppData/Local/Temp/TableauTemp/2201666451/Data/Tableau case study - Laptops' filename='Laptops.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[POS.csv].[Configuration]' />
              <expression op='[Laptops.csv].[Configuration]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[POS.csv].[Store Postcode]' />
                <expression op='[Store_Locations.csv].[Store Postcode]' />
              </expression>
            </clause>
            <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='POS.csv' table='[POS#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='date' name='Date' ordinal='0' />
                <column datatype='string' name='Configuration' ordinal='1' />
                <column datatype='integer' name='C OSx' ordinal='2' />
                <column datatype='integer' name='C OSy' ordinal='3' />
                <column datatype='string' name='Store Postcode' ordinal='4' />
                <column datatype='real' name='Retail Price' ordinal='5' />
              </columns>
            </relation>
            <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Store_Locations.csv' table='[Store_Locations#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Store Postcode' ordinal='0' />
                <column datatype='integer' name='St OS X' ordinal='1' />
                <column datatype='integer' name='St OS Y' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Laptops.csv' table='[Laptops#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Configuration' ordinal='0' />
              <column datatype='integer' name='Screen Size (Inches)' ordinal='1' />
              <column datatype='integer' name='Battery Life (Hours)' ordinal='2' />
              <column datatype='integer' name='RAM (GB)' ordinal='3' />
              <column datatype='real' name='Processor Speeds (GHz)' ordinal='4' />
              <column datatype='integer' name='HD Size (GB)' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[POS.csv].[Configuration]' />
              <expression op='[Laptops.csv].[Configuration]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[POS.csv].[Store Postcode]' />
                <expression op='[Store_Locations.csv].[Store Postcode]' />
              </expression>
            </clause>
            <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='POS.csv' table='[POS#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='date' name='Date' ordinal='0' />
                <column datatype='string' name='Configuration' ordinal='1' />
                <column datatype='integer' name='C OSx' ordinal='2' />
                <column datatype='integer' name='C OSy' ordinal='3' />
                <column datatype='string' name='Store Postcode' ordinal='4' />
                <column datatype='real' name='Retail Price' ordinal='5' />
              </columns>
            </relation>
            <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Store_Locations.csv' table='[Store_Locations#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Store Postcode' ordinal='0' />
                <column datatype='integer' name='St OS X' ordinal='1' />
                <column datatype='integer' name='St OS Y' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Laptops.csv' table='[Laptops#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Configuration' ordinal='0' />
              <column datatype='integer' name='Screen Size (Inches)' ordinal='1' />
              <column datatype='integer' name='Battery Life (Hours)' ordinal='2' />
              <column datatype='integer' name='RAM (GB)' ordinal='3' />
              <column datatype='real' name='Processor Speeds (GHz)' ordinal='4' />
              <column datatype='integer' name='HD Size (GB)' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Battery Life (Hours)]' value='[Laptops.csv].[Battery Life (Hours)]' />
          <map key='[C OSx]' value='[POS.csv].[C OSx]' />
          <map key='[C OSy]' value='[POS.csv].[C OSy]' />
          <map key='[Configuration (Laptops.csv)]' value='[Laptops.csv].[Configuration]' />
          <map key='[Configuration]' value='[POS.csv].[Configuration]' />
          <map key='[Date]' value='[POS.csv].[Date]' />
          <map key='[HD Size (GB)]' value='[Laptops.csv].[HD Size (GB)]' />
          <map key='[Processor Speeds (GHz)]' value='[Laptops.csv].[Processor Speeds (GHz)]' />
          <map key='[RAM (GB)]' value='[Laptops.csv].[RAM (GB)]' />
          <map key='[Retail Price]' value='[POS.csv].[Retail Price]' />
          <map key='[Screen Size (Inches)]' value='[Laptops.csv].[Screen Size (Inches)]' />
          <map key='[St OS X]' value='[Store_Locations.csv].[St OS X]' />
          <map key='[St OS Y]' value='[Store_Locations.csv].[St OS Y]' />
          <map key='[Store Postcode (Store_Locations.csv)]' value='[Store_Locations.csv].[Store Postcode]' />
          <map key='[Store Postcode]' value='[POS.csv].[Store Postcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Store_Locations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Configuration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Configuration]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>Configuration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C OSx</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C OSx]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>C OSx</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>C OSy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[C OSy]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>C OSy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Store Postcode]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>Store Postcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Retail Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Retail Price]</local-name>
            <parent-name>[POS.csv]</parent-name>
            <remote-alias>Retail Price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Postcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Store Postcode (Store_Locations.csv)]</local-name>
            <parent-name>[Store_Locations.csv]</parent-name>
            <remote-alias>Store Postcode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>St OS X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[St OS X]</local-name>
            <parent-name>[Store_Locations.csv]</parent-name>
            <remote-alias>St OS X</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>St OS Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[St OS Y]</local-name>
            <parent-name>[Store_Locations.csv]</parent-name>
            <remote-alias>St OS Y</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Configuration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Configuration (Laptops.csv)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>Configuration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Screen Size (Inches)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Screen Size (Inches)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>Screen Size (Inches)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Battery Life (Hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Battery Life (Hours)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>Battery Life (Hours)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAM (GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RAM (GB)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>RAM (GB)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processor Speeds (GHz)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Processor Speeds (GHz)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>Processor Speeds (GHz)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HD Size (GB)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HD Size (GB)]</local-name>
            <parent-name>[Laptops.csv]</parent-name>
            <remote-alias>HD Size (GB)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Battery Life (Hours)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Battery Life Group]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Battery Life (Hours)]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>6</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>4</value>
            <value>5</value>
          </bin>
        </calculation>
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_715790903980744707]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT((([C OSx]-[St OS X])^2)+([C OSy]-[St OS Y])^2)' />
      </column>
      <column datatype='string' default-role='measure' default-type='quantitative' hidden='true' name='[Configuration (Laptops.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[HD Size (GB)]' role='measure' type='quantitative' />
      <column datatype='string' name='[HD Size group]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[HD Size (GB)]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>120</value>
            <value>300</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>40</value>
            <value>80</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Processor Speeds (GHz)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Processor Speeds group]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Processor Speeds (GHz)]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>2.3999999999999999</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>1.5</value>
            <value>2.0</value>
          </bin>
        </calculation>
      </column>
      <column caption='Ram (Gb)' datatype='integer' name='[RAM (GB)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ram (Gb) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[RAM (GB)]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>4</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>1</value>
            <value>2</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Screen Size (Inches) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Screen Size (Inches)]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>17</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>15</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Screen Size (Inches)]' role='measure' type='quantitative' />
      <column caption='Store Postcode (Store Locations.csv)' datatype='string' hidden='true' name='[Store Postcode (Store_Locations.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_715790903980744707]' derivation='Avg' name='[avg:Calculation_715790903980744707:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Configuration]' derivation='Count' name='[cnt:Configuration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail Price]' derivation='Avg' name='[diff:avg:Retail Price:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[mn:Date:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Retail Price]' derivation='Avg' name='[diff:avg:Retail Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:nk]' pivot='key' type='nominal' />
      <column-instance column='[Retail Price]' derivation='Avg' name='[pcva:avg:Retail Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
      <group name='[Battery Life Group, HD Size group, Processor Speeds group and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Battery Life Group]' />
          <groupfilter function='level-members' level='[HD Size group]' />
          <groupfilter function='level-members' level='[Processor Speeds group]' />
          <groupfilter function='level-members' level='[Ram (Gb) (group)]' />
          <groupfilter function='level-members' level='[Screen Size (Inches) (group)]' />
        </groupfilter>
      </group>
      <group caption='Top N configration By Retail Price' name='[Top N configration By Retail Price]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Retail Price])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Configuration]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/Data Science/MICKEY/shashank.rawat28@gmail.com- Tableau case study - Laptops/shashank.rawat28@gmail.com- Tableau case study - Laptops.twb Files/Data/shashank.rawat28@gmail.com- Tableau case study - Laptops.twb Files/federated.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/18/2024 08:19:24 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Laptops+' increment-value='%null%' refresh-type='create' rows-inserted='297307' timestamp-start='2024-07-18 08:19:21.784' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>POS.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>965</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Configuration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Configuration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Configuration</remote-alias>
              <ordinal>1</ordinal>
              <family>POS.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3684</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C OSx</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C OSx]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C OSx</remote-alias>
              <ordinal>2</ordinal>
              <family>POS.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3431</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>C OSy</remote-name>
              <remote-type>20</remote-type>
              <local-name>[C OSy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>C OSy</remote-alias>
              <ordinal>3</ordinal>
              <family>POS.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3364</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Store Postcode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Store Postcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Store Postcode</remote-alias>
              <ordinal>4</ordinal>
              <family>POS.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail Price</remote-alias>
              <ordinal>5</ordinal>
              <family>POS.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>495</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>St OS X</remote-name>
              <remote-type>20</remote-type>
              <local-name>[St OS X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>St OS X</remote-alias>
              <ordinal>6</ordinal>
              <family>Store_Locations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>St OS Y</remote-name>
              <remote-type>20</remote-type>
              <local-name>[St OS Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>St OS Y</remote-alias>
              <ordinal>7</ordinal>
              <family>Store_Locations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Screen Size (Inches)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Screen Size (Inches)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Screen Size (Inches)</remote-alias>
              <ordinal>8</ordinal>
              <family>Laptops.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Battery Life (Hours)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Battery Life (Hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Battery Life (Hours)</remote-alias>
              <ordinal>9</ordinal>
              <family>Laptops.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RAM (GB)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RAM (GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RAM (GB)</remote-alias>
              <ordinal>10</ordinal>
              <family>Laptops.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Processor Speeds (GHz)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Processor Speeds (GHz)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Processor Speeds (GHz)</remote-alias>
              <ordinal>11</ordinal>
              <family>Laptops.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HD Size (GB)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HD Size (GB)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HD Size (GB)</remote-alias>
              <ordinal>12</ordinal>
              <family>Laptops.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Configuration:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;169&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;189&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;209&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;269&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;289&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;304&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;329&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;349&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;369&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;389&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;409&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;429&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;449&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;469&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;489&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;49&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;509&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;529&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;549&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;569&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;589&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;609&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;629&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;649&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;669&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;689&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;69&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;709&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;729&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;749&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;769&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;789&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;809&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;829&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;840&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;89&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;161&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;181&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;241&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;261&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;281&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;301&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;321&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;341&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;361&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;381&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;401&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;421&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;423&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;461&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;481&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;501&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;521&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;541&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;561&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;581&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;601&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;61&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;621&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;641&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;661&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;681&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;701&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;721&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;741&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;761&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;781&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;801&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;81&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;821&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;841&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;167&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;265&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;285&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;305&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;325&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;358&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;365&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;385&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;405&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;425&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;445&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;465&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;485&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;505&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;525&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;545&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;565&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;585&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;605&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;645&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;65&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;665&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;685&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;705&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;725&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;745&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;765&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;785&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;805&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;823&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;85&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;854&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;113&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;173&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;193&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;227&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;233&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;253&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;273&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;293&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;313&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;333&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;337&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;373&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;393&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;413&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;433&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;453&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;473&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;493&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;513&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;53&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;533&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;553&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;573&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;593&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;613&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;633&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;653&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;673&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;693&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;713&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;73&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;733&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;753&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;773&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;793&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;813&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;833&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;851&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;93&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;170&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;230&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;250&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;270&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;290&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;307&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;330&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;350&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;370&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;390&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;410&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;430&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;450&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;470&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;490&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;550&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;570&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;610&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;630&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;650&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;670&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;690&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;710&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;730&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;750&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;770&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;790&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;810&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;830&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;845&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;90&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;186&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;206&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;207&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;266&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;286&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;306&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;326&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;346&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;380&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;386&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;406&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;426&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;446&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;466&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;486&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;506&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;526&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;546&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;566&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;586&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;606&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;626&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;646&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;66&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;666&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;686&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;706&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;726&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;746&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;766&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;786&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;806&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;826&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;831&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;86&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;179&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;199&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;219&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;239&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;259&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;279&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;299&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;319&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;339&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;356&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;379&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;399&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;419&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;439&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;459&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;479&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;499&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;519&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;539&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;559&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;579&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;59&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;599&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;619&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;639&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;659&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;679&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;699&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;719&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;739&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;759&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;779&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;799&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;819&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;84&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;850&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;863&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;162&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;182&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;242&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;262&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;282&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;302&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;322&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;357&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;362&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;382&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;402&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;422&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;442&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;462&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;482&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;502&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;522&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;542&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;562&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;567&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;602&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;622&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;642&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;662&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;682&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;702&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;722&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;742&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;762&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;782&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;802&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;822&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;842&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;862&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;157&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;177&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;197&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;217&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;237&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;257&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;277&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;297&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;331&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;347&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;354&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;377&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;397&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;417&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;437&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;457&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;477&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;497&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;517&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;537&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;557&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;57&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;577&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;597&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;617&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;637&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;657&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;677&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;697&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;717&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;737&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;757&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;77&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;777&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;797&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;817&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;849&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;857&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;859&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;97&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;185&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;187&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;213&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;226&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;247&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;267&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;287&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;310&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;327&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;359&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;367&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;387&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;407&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;427&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;447&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;467&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;487&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;507&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;527&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;547&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;582&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;587&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;607&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;627&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;647&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;667&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;67&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;687&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;707&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;727&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;747&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;767&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;787&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;807&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;827&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;837&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;87&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;114&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;174&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;194&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;214&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;234&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;274&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;294&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;314&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;334&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;340&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;374&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;394&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;414&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;434&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;454&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;474&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;494&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;514&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;534&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;54&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;554&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;574&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;594&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;614&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;634&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;654&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;674&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;694&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;714&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;734&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;74&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;754&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;774&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;794&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;814&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;834&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;853&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;94&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;175&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;215&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;235&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;255&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;275&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;295&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;315&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;335&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;342&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;375&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;395&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;415&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;435&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;455&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;475&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;495&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;515&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;535&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;55&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;555&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;575&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;595&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;615&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;635&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;655&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;675&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;703&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;715&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;735&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;75&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;755&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;775&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;795&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;815&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;835&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;855&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;95&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;178&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;238&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;258&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;278&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;298&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;318&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;338&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;353&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;378&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;398&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;418&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;438&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;458&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;478&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;498&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;518&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;538&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;558&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;578&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;58&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;598&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;618&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;638&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;658&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;678&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;698&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;718&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;738&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;758&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;778&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;78&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;798&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;818&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;838&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;858&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;861&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;180&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;200&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;240&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;260&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;280&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;332&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;355&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;360&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;366&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;400&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;420&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;440&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;460&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;480&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;500&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;520&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;540&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;560&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;580&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;60&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;620&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;640&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;660&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;680&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;700&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;720&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;740&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;760&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;780&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;80&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;800&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;820&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;852&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;860&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;864&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;191&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;211&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;231&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;251&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;271&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;291&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;311&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;317&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;351&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;371&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;391&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;41&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;411&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;431&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;451&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;471&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;491&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;51&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;511&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;531&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;551&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;571&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;591&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;611&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;631&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;651&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;671&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;691&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;71&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;724&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;731&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;751&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;771&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;791&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;811&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;846&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;847&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;91&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;168&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;208&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;228&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;248&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;268&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;288&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;296&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;328&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;348&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;368&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;388&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;408&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;428&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;448&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;468&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;488&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;508&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;528&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;548&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;568&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;588&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;608&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;628&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;648&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;668&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;68&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;688&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;708&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;728&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;748&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;768&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;788&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;808&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;828&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;839&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;88&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;163&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;183&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;203&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;243&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;263&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;283&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;303&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;323&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;343&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;363&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;383&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;403&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;43&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;441&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;443&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;463&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;483&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;503&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;523&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;543&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;563&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;583&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;603&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;623&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;643&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;663&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;683&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;695&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;72&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;723&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;743&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;763&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;783&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;803&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;82&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;825&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;843&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;116&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;156&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;196&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;216&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;256&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;276&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;308&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;316&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;336&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;345&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;376&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;396&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;416&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;436&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;456&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;476&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;496&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;516&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;536&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;556&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;56&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;576&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;596&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;616&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;636&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;656&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;676&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;696&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;716&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;736&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;756&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;76&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;776&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;796&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;816&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;836&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;856&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;96&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;112&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;172&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;192&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;212&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;252&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;272&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;292&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;312&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;320&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;352&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;372&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;392&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;412&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;432&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;452&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;472&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;492&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;512&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;532&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;552&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;572&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;592&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;612&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;632&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;652&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;672&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;692&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;712&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;732&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;752&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;772&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;792&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;812&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;83&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;832&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;848&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;92&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;184&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;204&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;224&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;244&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;264&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;284&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;309&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;324&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;344&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;364&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;384&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;404&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;424&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;444&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;464&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;484&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;504&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;524&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;544&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;564&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;584&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;604&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;624&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;64&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;644&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;664&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;684&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;704&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;711&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;744&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;764&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;784&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;79&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;804&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;824&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;844&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[cnt:Configuration:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[diff:avg:Retail Price:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[diff:avg:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[pcva:avg:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
          <calculation class='tableau' formula='20' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[POS.csv].[Configuration]' />
                    <expression op='[Laptops.csv].[Configuration]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[POS.csv].[Store Postcode]' />
                      <expression op='[Store_Locations.csv].[Store Postcode]' />
                    </expression>
                  </clause>
                  <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='POS.csv' table='[POS#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='date' name='Date' ordinal='0' />
                      <column datatype='string' name='Configuration' ordinal='1' />
                      <column datatype='integer' name='C OSx' ordinal='2' />
                      <column datatype='integer' name='C OSy' ordinal='3' />
                      <column datatype='string' name='Store Postcode' ordinal='4' />
                      <column datatype='real' name='Retail Price' ordinal='5' />
                    </columns>
                  </relation>
                  <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Store_Locations.csv' table='[Store_Locations#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='string' name='Store Postcode' ordinal='0' />
                      <column datatype='integer' name='St OS X' ordinal='1' />
                      <column datatype='integer' name='St OS Y' ordinal='2' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.0wczvw21gykglp1b2winb0y2xonc' name='Laptops.csv' table='[Laptops#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Configuration' ordinal='0' />
                    <column datatype='integer' name='Screen Size (Inches)' ordinal='1' />
                    <column datatype='integer' name='Battery Life (Hours)' ordinal='2' />
                    <column datatype='integer' name='RAM (GB)' ordinal='3' />
                    <column datatype='real' name='Processor Speeds (GHz)' ordinal='4' />
                    <column datatype='integer' name='HD Size (GB)' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Question-1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'>Top &lt;</run>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'><![CDATA[> Configration Laptop That Were Sold in <]]></run>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]</run>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]' />
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</column>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]</column>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' value='292' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' />
              <lod column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{70FEBC07-1F5B-4D2E-9622-F7E5870647F7}' />
    </worksheet>
    <worksheet name='Question-2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>Chart Showing Change in the Percentage Difference in Average Retail Price  Month-wise for Top 20 Configration </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]' />
          <slices>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[mn:Date:ok]' value='67' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk] * [federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk])</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{9FF4796B-BA97-47B3-A2C2-F6AC27C377C5}' />
    </worksheet>
    <worksheet name='Question-3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>Average Price of &lt;</run>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>&gt; Laptop Configurations across all 15 Stores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]' />
          <slices>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]</rows>
        <cols>([federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk] / [federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk])</cols>
      </table>
      <simple-id uuid='{EDB88C61-26B6-4E8E-86CD-61C48A1A1216}' />
    </worksheet>
    <worksheet name='Question-4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>Graph Representing Sales pattern Date-wise for Each Month of Year 2015</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Light' fontsize='12'>Sales is varying by days for the Month August, September and December,</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Light' fontsize='12'>and There is a Hike in sales in the month of June.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[md:Date:ok]'>
            <groupfilter function='level-members' level='[md:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[md:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]</rows>
        <cols>([federated.1nm6dln0vt8nwy1eag4vv01q1imh].[mn:Date:ok] * [federated.1nm6dln0vt8nwy1eag4vv01q1imh].[tdy:Date:qk])</cols>
      </table>
      <simple-id uuid='{674976FD-BBF0-41A3-B5BC-AEF1431092FF}' />
    </worksheet>
    <worksheet name='Question-5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='18'>TreeMap Representing Average Retail Price by Colors and Quantity Sold by Size for all 15 Stores</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>Yes, Stores with lower Average Pricing also sell more , here, we have store SW1P 3AU which has low Average Price of $452.55 and sell maximum quantity of 61,924 </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration]' derivation='Count' name='[cnt:Configuration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' />
              <size column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[cnt:Configuration:qk]' />
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8FFECECC-347B-44B7-9C18-1CD844706379}' />
    </worksheet>
    <worksheet name='Question-6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#499894' fontsize='18'>Average Retail Price for Combined Field based on Configrations.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='integer' name='[Battery Life (Hours)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Battery Life Group]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Battery Life (Hours)]' new-bin='true'>
                <bin default-name='false' value='&quot;High&quot;'>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Low&quot;'>
                  <value>4</value>
                  <value>5</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[HD Size (GB)]' role='measure' type='quantitative' />
            <column datatype='string' name='[HD Size group]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[HD Size (GB)]' new-bin='true'>
                <bin default-name='false' value='&quot;High&quot;'>
                  <value>120</value>
                  <value>300</value>
                </bin>
                <bin default-name='false' value='&quot;Low&quot;'>
                  <value>40</value>
                  <value>80</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Processor Speeds (GHz)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processor Speeds group]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Processor Speeds (GHz)]' new-bin='true'>
                <bin default-name='false' value='&quot;High&quot;'>
                  <value>2.3999999999999999</value>
                </bin>
                <bin default-name='false' value='&quot;Low&quot;'>
                  <value>1.5</value>
                  <value>2.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Ram (Gb)' datatype='integer' name='[RAM (GB)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ram (Gb) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[RAM (GB)]' new-bin='true'>
                <bin default-name='false' value='&quot;High&quot;'>
                  <value>4</value>
                </bin>
                <bin default-name='false' value='&quot;Low&quot;'>
                  <value>1</value>
                  <value>2</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Screen Size (Inches) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Screen Size (Inches)]' new-bin='true'>
                <bin default-name='false' value='&quot;High&quot;'>
                  <value>17</value>
                </bin>
                <bin default-name='false' value='&quot;Low&quot;'>
                  <value>15</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Screen Size (Inches)]' role='measure' type='quantitative' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Battery Life Group, HD Size group, Processor Speeds group and 2 more (Combined)]</cols>
      </table>
      <simple-id uuid='{5EFD4ACE-4232-4A3C-9AB2-F736554E9208}' />
    </worksheet>
    <worksheet name='Question-7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='18'>Bar Plot Representing the Average Distance  Between Customer and Store Location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='integer' name='[C OSx]' role='measure' type='quantitative' />
            <column datatype='integer' name='[C OSy]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='real' name='[Calculation_715790903980744707]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT((([C OSx]-[St OS X])^2)+([C OSy]-[St OS Y])^2)' />
            </column>
            <column datatype='integer' name='[St OS X]' role='measure' type='quantitative' />
            <column datatype='integer' name='[St OS Y]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Calculation_715790903980744707]' derivation='Avg' name='[avg:Calculation_715790903980744707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]' value='62' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' />
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <reference-line axis-column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Average Distance = &lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{4005C3AD-F6A4-4F19-9142-63F1A3AF143B}' />
    </worksheet>
    <worksheet name='Question-8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='18'>Dual Chart showing Retail Price and Average Distance for All 15 Stores</run>
            <run>Æ </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='12'> Above Plot Shows that Sales are not Dependent on Store Proximity.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='integer' name='[C OSx]' role='measure' type='quantitative' />
            <column datatype='integer' name='[C OSy]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='real' name='[Calculation_715790903980744707]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT((([C OSx]-[St OS X])^2)+([C OSy]-[St OS Y])^2)' />
            </column>
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[St OS X]' role='measure' type='quantitative' />
            <column datatype='integer' name='[St OS Y]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Calculation_715790903980744707]' derivation='Avg' name='[avg:Calculation_715790903980744707:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]' value='56' />
            <format attr='width' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' value='64' />
            <format attr='width' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' value='64' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk] + [federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk])</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{FE5B4FA1-FA67-4D30-9A02-F1EC17D2BF60}' />
    </worksheet>
    <worksheet name='Sheet-3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Count of sales vs Store</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Configuration]' derivation='Count' name='[cnt:Configuration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[cnt:Configuration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[cnt:Configuration:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{931CCC74-6996-447C-ABEA-EB9412E21C22}' />
    </worksheet>
    <worksheet name='Sheet-4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Sum' name='[sum:Retail Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eae2e7</color>
                <color>#e3d3de</color>
                <color>#dcc6d4</color>
                <color>#d5b8cb</color>
                <color>#ceabc3</color>
                <color>#c79fba</color>
                <color>#c093b1</color>
                <color>#b987a9</color>
                <color>#b27ca1</color>
                <color>#ac7299</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' />
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{47C03588-45A1-49F5-AE44-6F22034B83C2}' />
    </worksheet>
    <worksheet name='sheet-1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Average retail price vs Store</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
          </datasources>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store Postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Postcode]' derivation='None' name='[none:Store Postcode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Average Retail Price =&lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</cols>
      </table>
      <simple-id uuid='{C83CC98F-6F27-451D-B297-D29F7D19D994}' />
    </worksheet>
    <worksheet name='sheet-2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Average Reatail Price vs. Store</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Laptops+' name='federated.1nm6dln0vt8nwy1eag4vv01q1imh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Configration' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nm6dln0vt8nwy1eag4vv01q1imh'>
            <column datatype='string' name='[Configuration]' role='dimension' type='nominal' />
            <column datatype='real' name='[Retail Price]' role='measure' type='quantitative' />
            <column-instance column='[Retail Price]' derivation='Avg' name='[avg:Retail Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Configuration]' derivation='None' name='[none:Configuration:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]' />
          <slices>
            <column>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]</rows>
        <cols>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</cols>
      </table>
      <simple-id uuid='{88EF8292-F421-4A12-A725-8682979730EE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00007f' fontsize='24' underline='true'>Store-View Dashboard </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='16' param='vert' type-v2='layout-flow' w='98728' x='636' y='940'>
            <zone h='7403' id='17' type-v2='title' w='98728' x='636' y='940'>
              <zone-style>
                <format attr='border-color' value='#606b76' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='3' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90717' id='14' param='vert' type-v2='layout-flow' w='98728' x='636' y='8343'>
              <zone h='90717' id='12' type-v2='layout-basic' w='98728' x='636' y='8343'>
                <zone h='86793' id='5' param='horz' type-v2='layout-flow' w='98728' x='636' y='8343'>
                  <zone h='86793' id='3' type-v2='layout-basic' w='53621' x='636' y='8343'>
                    <zone h='37249' id='1' name='Question-5' w='53621' x='636' y='8343'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='2' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45276' id='9' name='Question-8' w='53621' x='636' y='49860'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='2' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4268' id='6' name='Question-5' pane-specification-id='0' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' type-v2='color' w='53621' x='636' y='45592'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='2' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='567' h='86793' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='45107' x='54257' y='8343'>
                    <zone h='83033' id='7' name='Question-7' w='45107' x='54257' y='8343'>
                      <layout-cache cell-count-w='15' minheight='320' non-cell-size-w='77' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='2' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='24' h='3760' id='8' is-fixed='true' name='Question-7' pane-specification-id='0' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' type-v2='color' w='45107' x='54257' y='91376'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='2' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='3924' id='11' type-v2='layout-flow' w='98728' x='636' y='95136'>
                  <zone h='3924' id='10' name='Question-8' pane-specification-id='1' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' type-v2='color' w='98728' x='636' y='95136'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3C7B89BB-1879-4727-88EA-2C1FA834B6A1}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='20' underline='true'>Laptop Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='5288' id='3' type-v2='title' w='99034' x='483' y='940' />
            <zone h='11868' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='6228' />
            <zone h='80964' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='18096'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Average Retail price  Per Store' captured-sheet='sheet-1' id='1' />
                  <story-point caption='Average Retail Price per Laptop Configration' captured-sheet='sheet-2' id='2'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='20' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Quantity Sold Per Store' captured-sheet='Sheet-3' id='3' />
                  <story-point caption='Total Revenue Generate by Each Store' captured-sheet='Sheet-4' id='4'>
                    <capturedDeltas>
                      <worksheet name='Sheet-4'>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' shelf='columns' />
                          </shelf-sorts>
                        </shelf-sort-deltas>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Average Distance Travelled by Customer' captured-sheet='Question-7' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CF194CB0-E003-46CA-A771-ADEF8BC57142}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='Question-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AC5B60B3-E8D8-4150-9E4B-4980322954C5}' />
    </window>
    <window class='worksheet' name='Question-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1BAA7BA4-E931-43A2-BDE5-6404317A7E7E}' />
    </window>
    <window class='worksheet' name='Question-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79C5F44D-21D2-41B2-B3DB-A1F6DE4A9D95}' />
    </window>
    <window class='worksheet' name='Question-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='97'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[md:Date:ok]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{72374F9B-BAB9-4C5A-8356-575E941011E7}' />
    </window>
    <window class='worksheet' name='Question-5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Retail Price:qk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A4AF9A7-E487-4FFF-84D6-85B43640562B}' />
    </window>
    <window class='worksheet' name='Question-6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Battery Life Group, HD Size group, Processor Speeds group and 2 more (Combined)]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Calculation_715790903977234434:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3542B2E6-0888-4A4D-B887-104D1D1EEFDA}' />
    </window>
    <window class='worksheet' name='Question-7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[avg:Calculation_715790903980744707:qk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B9753F-9ACB-47E5-8358-06DDC4D3C3FB}' />
    </window>
    <window class='worksheet' name='Question-8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A03E0334-AC11-4A00-B3AD-C593C59388F1}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Question-5'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Question-7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Question-8'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E6D857F5-0EFF-4426-A965-279F8D60EFCC}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{AFFDF977-71F5-4D0C-BABB-0C20E7E80F4F}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Configuration:nk]</field>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9274183C-FD1A-4408-A0C7-F35942D6D73F}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet-4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[sum:Retail Price:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E17866B-3036-43DB-B2FB-16621AB8CDD9}' />
    </window>
    <window class='worksheet' hidden='true' name='sheet-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[none:Store Postcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90266105-2414-46ED-8A5A-EBAC176C9A29}' />
    </window>
    <window class='worksheet' hidden='true' name='sheet-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nm6dln0vt8nwy1eag4vv01q1imh].[Top N configration By Retail Price]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA358E8C-0312-46B8-8988-2A5AECE617EC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question-1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question-2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question-3' width='192'>
      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
      a3Dp7VeZm1+k5ozS5lTJag662yOIIgTDbczNTN7evyYTXzxzkPPzRaIhP06Pn862MC63G18w
      Sm9XOz86N8tXHx7BbDIhiiJrk+/x/lyCl3/0fa5NLzJ7+S1ef/cKoihw5d03+ZtXz2671u6I
      j1//ykm+9/oECAJr6RJvXF3iO188jmmzTFEU7z4K5HJvbC04eGDjW1XDwzfH938aXde5Opfg
      y2c28gqCwNcfHuU/vHCFM4e7tk1WXr+8xOMn+j72fe+CIPBLTx7md//sbR492oN186NrsqLy
      o3Mz/JNvP7LNxoee+BIPPbHx79M3lRbhZ7r7b0p96HA3z78zw9RKhoO9YQqVOs+/M8P//utP
      3NX1P3d2mqdODzTnC1aziX/8i2f4Z//hDdqDbk4Mt6PrOn/28jU6wh4+f18/giAQ6TvGt7/z
      a3RFA9gbEuG+YQqCgiUSJZ0u4ncpFNQA6UIVu9WMy25h6tI54rki9UydDluNs+/nCLmsnD13
      gWcevx9JlhDEOzergQ4/dUkhninTGd7+3bNUvspiPM9v/dzGsr4qlUlkSkghmWKpQJtoYuTQ
      MZYSG6vzlUqZSu3mc54+0MGVuQRvXl3m1UsLfPupo3ic2+ed92QznKbrLCXyDHS0QlNDXUFE
      YePOcgNJVnlvco3PHeu9F2bdkc6wh+NDbfz43dZnlN6bWKM74qUz9NE/VmcyiXz7qaP815fH
      UDWNv3pjgsdP9hG6Tcjvp8kWa1ycXufp+7fH+gMeB7/zyw/zxz+8xHKiwFvXVphdy/G3v3Ri
      m7gOD/URy0l87gtPc3CgmzNPPM2pw8NEImFGjpzm/uOjzK1vhGMBDp5+nF/51V/jsftGadQl
      Tpw8gVKrcvToQVKZAsl4nM7uO9efySTyxIk+Xrm0sC1d13VeujjPEyf6sGwOARvlAuuxODPz
      M4SDnaytr/Lc9/+SfLlKKpWmISnUavWbFv0EQeDLZ4b5o2cvUJcUzhzqvtkQfRfJ5XI7ps+u
      ZvTv/rtXb0p/5/qK/nt/drb5/wtT6/rv/dlZXdO03TTrI1Eo1/Xf/lfP6/lSTZcVVf9f/vBF
      fXYtu2vlq6qm//P/+Lr+/Tcm9P/h//mxXq1Lt8z70/7VNF3/4+cu6s+dnbrlMe9Px/Tf+N1n
      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
    </thumbnail>
    <thumbnail height='192' name='Question-4' width='192'>
      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
      5M2qBSgqKyXsHsezGCCZzuYzkxB5s+peoERoAdu2O3j44G50ci6z+DW16jvAiRNvUl0S4/Uz
      8gFY/PpafRPIrKH74hRTA28yOuPLZyYh8mbVTaBDRz6czxxCbIpVC/DWq8/S4/KSSqY5dOS3
      2d1cmc9cQuTFqgXYse9eiuvdLCyGKCsuyGcmIfLmurtBPePneefkacZnI/nMJETeXPdkuCrn
      HsKhbqyGlfeDRuenOTfupbV9B66B7uWBsdzzC9Rv304qoCUSW2J3545bEl6I9Vq1APGQj96e
      YXZ1tLMYiq84jXshgNWoIRpdoqSiBUcuRlyj4Z5DdzEyPEb/28Mc+u3fkoGxbkCyrGzTB8Yq
      sZegGMq5c6dzxfuryh0MTs8RiWZJLU0R1xXS6DBx5s23qGtvp/PuCmaG+ynd04FeBsZalWRZ
      2aYOjGWxOTApXiaH08z79Dxw77ZrprFV1HFnRd3l7355f0Pr5S9KASo2Lq0QG+y6p0OXllcz
      PTZBtbM8X3mEyKtVCzBy8QyDkyHuvu8gyXgsn5mEyJtVCzA2ucDhu1v5xalxWmod+cwkRN6s
      WoD2tkZGxgPs319PIJLIZyYh8mbVD8FN23fTlM8kQmwCGRdIqJoUQKiaFEComhRAqJoUQKia
      FEComhRAqJoUQKiaFEComhRAqJoUQKiaFEComhRAqJoUQKiaFEComhRAqNp1h0V5L1yD3VDZ
      Sdzdtzww1sC4m137dxELaEgkFmhsdG5AVCE23roKkIn5iCdSpBNxDEYH1lyCuWCMe+7qYGh0
      mon+Gfbcd1gGxroBybKyTR8Y60amplyEQgHCLFKuTwFZ9FqIhgJozAU4m5z4/X6qHbVoZWCs
      VUmWlW3qwFjvRfOOPdDcQjBrJu13EdfZqCkx0j/moWOnk5gD0ukoCiB/ZUlsRev+DIDRSjGA
      xbl8U+fOS39VvrAQwLjuRQhxq8heIKFqUgChalIAoWpSAKFqUgChalIAoWpSAKFqUgChalIA
      oWpSAKFqUgChalIAoWpSAKFqUgChalIAoWpSAKFqUgChalIAoWpSAKFqUgChauu6KD7qn2dg
      bIrymm0kfdMyMJa47ayrAAUl5bQ2QTAZAxkYa80ky8q2/MBY0SUvwZyRhhoHvb0jyMBYayNZ
      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
      FiuJDzMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Question-5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question-6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question-7' width='192'>
      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
      PL7zZ98HwLJtQsHg417Sc1ffAODi5cMfp9cPgKZpx95u5DTbovRa0zCMPTX0Xmp2eT2V5/US
      AJ3Z85cOv1sfcGyb/PLDI08fT6XJjMoJ+P2oPzsaHTOlPJr1ox/yEeqyeU30B9mMIXxNAiB8
      TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0C
      IHxNAiB8TQIgfK2nUyI3css07ACjQ0k8xyYxmHmiLYoQL7ueApAeHqWR22B18T6h5BipdOaJ
      tii9tzBx97SyOIm2KL3X3NtyQ9qivPJtUeDLLz5ncPwsoVCAttnCVRDow7YoyustALrepeWG
      tEXpqWYftEWB+YuXcZVONDqEphTSSV30m54CMBBLHNc4hHghZCuQ8DUJgPA1CYDwNQmA8DUJ
      gPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDw
      tZ5OiayVt1GhJAEclOsQjSelLYroKz0FQA/o1KoNaqUcenSQ84kkruvieR7A459H5XnenvYY
      rttrzb3tWnqtqbrU7LUrBMfQVqZLye41T6CFyXG0RXm6K0SvbVH2vu89tkXRNGiZJuGBOJZt
      odhtO6KUQtf1nltj6JqGrj+5lPb0/5+Xdko1ew5Al5q90rR9nmuv71OXmj23RdH1PePqqWaX
      564bem8BMJsdIpEAw8Oj6HgotdsjR9O++teTLjWOoeSx16RLzePg55pd3/veCnapp/UWgOGx
      yZ6GJMSLJluBhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCE
      r0kAhK9JAISvSQCEr0kAhK/1dEJMfnURU4UZSsVxnQ6DmRE5KV70lR7mAArL1Qi4HVaXFyjW
      LHT58Is+00MANMxGhXKzw+DQKJrdxHV7PBFciFPW0yLQxauvo9DQNQ2QD7/oP5rquX/HV5RS
      eJ6H53nouo7rOtiWdeD9D+ooEAyGMAIBlFKPW624rovZbB65ZigcJhQOAzwep1IKq90+ck0j
      YBAIhp6oCdCs13uoGSASje6pWdze3rffknr0JaTt0z8hEAyQzgztqVkulXBse/+xovatqRs6
      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
      KTSIMr4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Question-8' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
